//kruskal algorithm.
#include<stdio.h>
int cost[10][10],parent[10];
int a,b,i,j,u,v,n,min,mincost=0,e=1;
int find(int i)
{
    while(parent[i])
        i=parent[i];
        return i;
}
int check(int u,int v)
{
   if(u!=v)
   {
       parent[v]=u;
       return 1;
   }
   return 0;
}
int main()
{
    printf("\nenter limit:");
    scanf("%d",&n);
    printf("\nenter graph:");
    for(i=1;i<=n;i++)
    {
       for(j=1;j<=n;j++)
       {
           scanf("%d",&cost[i][j]);
           if(cost[i][j]==0)
               cost[i][j]=999;
       }
    }
    printf("\nmst:");
   while(e<n)
    {
        for(i=1,min=999;i<=n;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(cost[i][j]<min)
                {
                    min=cost[i][j];
                    a=u=i;
                    b=v=j;
                }
            }
        }
        u=find(u);
        v=find(v);
        if(check(u,v)==1)
        {
            printf("\nedge=%d(%d %d)=%d",e++,a,b,min);
            mincost=mincost+min;
        }
        cost[a][b]=cost[b][a]=999;
    }
    printf("\nmincost=%d",mincost);
}
